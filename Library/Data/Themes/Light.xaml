<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary
            Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Orange.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="WindowStyle" TargetType="Window">
        <Style.Setters>
            <Setter Property="ResizeMode" Value="NoResize" />
            <Setter Property="WindowStyle" Value="None" />
            <Setter Property="Icon" Value="../Images/Icon.png" />
        </Style.Setters>
    </Style>
    <Style x:Key="BackgroundGridStyle" TargetType="Grid">
        <Style.Setters>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.1,0" EndPoint="0.9,1">
                        <GradientStop Color="#82b3c9" Offset="0" />
                        <GradientStop Color="#b3e5fc" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <Style x:Key="BackgroundGridToolBar" TargetType="Grid">
        <Style.Setters>
            <Setter Property="Background" Value="#bcbcbc" />
        </Style.Setters>
    </Style>
    <Style x:Key="BorderBgGridStyle" TargetType="Border">
        <Style.Setters>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.1,0" EndPoint="0.8,1">
                        <GradientStop Color="#fafafa" Offset="0" />
                        <GradientStop Color="#ffffff" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Height" Value="400" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="CornerRadius" Value="0,0,150,0" />
        </Style.Setters>
    </Style>
    <Style x:Key="TitleText" TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="FontSize" Value="35" />
            <Setter Property="FontFamily" Value="Calibri Bold" />
        </Style.Setters>
    </Style>
    <Style x:Key="TextStyle" TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style.Setters>
    </Style>
    <Style x:Key="InputBorderStyle" TargetType="Border">
        <Style.Setters>
            <Setter Property="Background" Value="#c7c7c7" />
            <Setter Property="BorderBrush" Value="#8d8d8d" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Margin" Value="20" />
            <Setter Property="Padding" Value="10,10,10,20" />
        </Style.Setters>
    </Style>
    <Style x:Key="InputTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
        <Style.Setters>
            <Setter Property="BorderBrush" Value="#82b3c9" />
            <Setter Property="Foreground" Value="#373737" />
            <Setter Property="Margin" Value="10,0" />
            <Setter Property="CaretBrush" Value="#007ac1" />
            <Setter Property="SelectionBrush" Value="#03a9f4" />
        </Style.Setters>
    </Style>
    <Style x:Key="InputPasswordBoxStyle" TargetType="PasswordBox"
           BasedOn="{StaticResource MaterialDesignPasswordBox}">
        <Style.Setters>
            <Setter Property="BorderBrush" Value="#82b3c9" />
            <Setter Property="Foreground" Value="#373737" />
            <Setter Property="Margin" Value="10,0" />
            <Setter Property="CaretBrush" Value="#007ac1" />
            <Setter Property="SelectionBrush" Value="#03a9f4" />
        </Style.Setters>
    </Style>
    <Style x:Key="PickIconStyle" TargetType="materialDesign:PackIcon">
        <Style.Setters>
            <Setter Property="Foreground" Value="Black" />
        </Style.Setters>
    </Style>
    <Style x:Key="ButtonStyle" TargetType="Button" BasedOn="{StaticResource  MaterialDesignRaisedButton}">
        <Style.Setters>
            <Setter Property="Background" Value="#5e92f3" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="WhiteSmoke" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style.Setters>
    </Style>
    <Style x:Key="ClickableTextStyle" TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Foreground" Value="#373737" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="TextDecorations" Value="Underline" />
            <Setter Property="Cursor" Value="Hand" />
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#3f51b5" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Style.Setters>
            <Setter Property="Background" Value="Red" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Width" Value="20" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="ToolTip" Value="Close" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="180" />
        </Style.Setters>
    </Style>
    <Style x:Key="CollapseButtonStyle" TargetType="Button" BasedOn="{StaticResource CloseButtonStyle}">
        <Setter Property="Background" Value="Orange" />
        <Setter Property="Margin" Value="30,5,0,0" />
        <Setter Property="ToolTip" Value="Collapse" />
    </Style>
    <Style x:Key="ThemeSelectorStyle" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignFilledComboBox}">
        <Style.Setters>
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Height" Value="35" />
            <Setter Property="Padding" Value="10,0,0,0" />
        </Style.Setters>
    </Style>
    <Style x:Key="ComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignComboBox}">
        <Style.Setters>
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Padding" Value="10,0,0,0" />
        </Style.Setters>
    </Style>
    <Style x:Key="BorderMainBgGridStyle" TargetType="Border">
        <Style.Setters>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.1,0" EndPoint="0.9,1">
                        <GradientStop Color="#fafafa" Offset="0" />
                        <GradientStop Color="#ffffff" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Height" Value="670" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
        </Style.Setters>
    </Style>
    <Style x:Key="ButtonLibraryHeadStyle" TargetType="Button">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="materialDesign:ButtonProgressAssist.IndicatorForeground"
                Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
        <Setter Property="materialDesign:ButtonProgressAssist.IndicatorBackground"
                Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="materialDesign:RippleAssist.Feedback" Value="White" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="60" />
        <Setter Property="materialDesign:ButtonProgressAssist.IsIndicatorVisible" Value="False" />
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <AdornerDecorator
                            CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(materialDesign:ShadowAssist.CacheMode)}">
                            <Grid>
                                <Border Background="{TemplateBinding Background}"
                                        CornerRadius="{Binding Path=(materialDesign:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        x:Name="border"
                                        Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ShadowAssist.ShadowDepth), Converter={x:Static materialDesign:ShadowConverter.Instance}}" />
                            </Grid>
                        </AdornerDecorator>
                        <materialDesign:Ripple Content="{TemplateBinding Content}"
                                               ContentTemplate="{TemplateBinding ContentTemplate}"
                                               Focusable="False"
                                               ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                               Padding="0"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <materialDesign:Ripple.Clip>
                                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                    <Binding ElementName="border" Path="ActualWidth" />
                                    <Binding ElementName="border" Path="ActualHeight" />
                                    <Binding ElementName="border" Path="CornerRadius" />
                                    <Binding ElementName="border" Path="BorderThickness" />
                                </MultiBinding>
                            </materialDesign:Ripple.Clip>
                        </materialDesign:Ripple>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#50010101" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="UserPhotoStyleWithoutUpload" TargetType="Button"
           BasedOn="{StaticResource ButtonLibraryHeadStyle}">
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="180" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <AdornerDecorator
                            CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(materialDesign:ShadowAssist.CacheMode)}">
                            <Grid>
                                <Border Background="{TemplateBinding Background}"
                                        CornerRadius="{Binding Path=(materialDesign:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        x:Name="border"
                                        Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ShadowAssist.ShadowDepth), Converter={x:Static materialDesign:ShadowConverter.Instance}}" />
                            </Grid>
                        </AdornerDecorator>
                        <materialDesign:Ripple Content="{TemplateBinding Content}"
                                               ContentTemplate="{TemplateBinding ContentTemplate}"
                                               Focusable="False"
                                               ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                               Padding="{TemplateBinding Padding}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <materialDesign:Ripple.Clip>
                                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                    <Binding ElementName="border" Path="ActualWidth" />
                                    <Binding ElementName="border" Path="ActualHeight" />
                                    <Binding ElementName="border" Path="CornerRadius" />
                                    <Binding ElementName="border" Path="BorderThickness" />
                                </MultiBinding>
                            </materialDesign:Ripple.Clip>
                        </materialDesign:Ripple>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="materialDesign:ShadowAssist.Darken" Value="True" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <materialDesign:PackIcon Kind="Upload" Width="40" Height="40"
                                                             Style="{DynamicResource PickIconStyle}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="Opacity" Value="0.2" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Content" Value="" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonBookStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
        <Setter Property="materialDesign:ButtonProgressAssist.IndicatorForeground"
                Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
        <Setter Property="materialDesign:ButtonProgressAssist.IndicatorBackground"
                Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="materialDesign:RippleAssist.Feedback" Value="White" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="TextBlock.FontWeight" Value="Medium" />
        <Setter Property="TextBlock.FontSize" Value="14" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="materialDesign:ButtonProgressAssist.IsIndicatorVisible" Value="False" />
        <Setter Property="materialDesign:ButtonProgressAssist.Opacity" Value=".4" />
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <AdornerDecorator
                            CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(materialDesign:ShadowAssist.CacheMode)}">
                            <Grid>
                                <Border Background="{TemplateBinding Background}"
                                        CornerRadius="{Binding Path=(materialDesign:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        x:Name="border"
                                        Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ShadowAssist.ShadowDepth), Converter={x:Static materialDesign:ShadowConverter.Instance}}" />
                            </Grid>
                        </AdornerDecorator>
                        <materialDesign:Ripple Content="{TemplateBinding Content}"
                                               ContentTemplate="{TemplateBinding ContentTemplate}"
                                               Focusable="False"
                                               ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                               Padding="{TemplateBinding Padding}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <materialDesign:Ripple.Clip>
                                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                    <Binding ElementName="border" Path="ActualWidth" />
                                    <Binding ElementName="border" Path="ActualHeight" />
                                    <Binding ElementName="border" Path="CornerRadius" />
                                    <Binding ElementName="border" Path="BorderThickness" />
                                </MultiBinding>
                            </materialDesign:Ripple.Clip>
                        </materialDesign:Ripple>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="EllipseAccountStyle" TargetType="Ellipse">
        <Style.Setters>
            <Setter Property="Fill" Value="White" />
        </Style.Setters>
    </Style>

    <Style x:Key="BorderBehindLiStyle" TargetType="Border">
        <Style.Setters>
            <Setter Property="Margin" Value="20,0,20,20"></Setter>
            <Setter Property="Background" Value="WhiteSmoke"></Setter>
            <Setter Property="Height" Value="400" />
        </Style.Setters>
    </Style>
</ResourceDictionary>